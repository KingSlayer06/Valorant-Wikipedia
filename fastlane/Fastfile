# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

fastlane_require 'dotenv'

api_key = nil
keychain_name='fastlane_tmp_keychain'
# Define the profile type, e.g. appstore, adhoc, development etc"
profile_type = "appstore"

before_all do |lane|
  setup_ci()
  api_key = get_api_key()
end

lane :release do
  certificate_info = certificate_update(
    apiKey: api_key,
    appIdentifiers: [ENV["BUNDLE_ID"]],
    profileType: profile_type,
  )

  # pod_install()
  update_version_number()
  archive()
  upload()
end

desc "fetch API key using AppStore Connect API"
lane :get_api_key do
  issuer_id = ENV['ISSUER_ID']
  key_id = ENV['KEY_ID']
  api_key_file_content = ENV['API_KEY_FILE_CONTENT']
  app_store_connect_api_key(
    is_key_content_base64: true,
    issuer_id: issuer_id,
    key_content: Base64.strict_encode64(api_key_file_content),
    key_id: key_id,
  )
end

desc "Sync code signing certificates and profiles"
lane :certificate_update do
  git_basic_auth = ENV['GIT_BASIC_AUTHORIZATION']
  sync_code_signing(
      app_identifier: ENV['BUNDLE_ID'],
      git_basic_authorization: Base64.strict_encode64(git_basic_auth),
      git_url: ENV['MATCH_GIT_URL'],
      type: profile_type,
      keychain_name: keychain_name,
      readonly: is_ci,
  )
end

lane :pod_install do
  cocoapods(
    clean_install: true,
  )
end

lane :update_version_number do
  version_number_at_testflight = latest_testflight_build_number(
     api_key: api_key,
     app_identifier: ENV["BUNDLE_ID"]
   )
   increment_build_number(build_number: version_number_at_testflight + 1, xcodeproj: "Valorant-Stats.xcodeproj")
end

lane :archive do
  build_app(
    export_method: "app-store",
    workspace: "Valorant-Stats.xcworkspace", 
    scheme: "Valorant-Stats"
  )
end

lane :upload do 
  upload_to_testflight(
    api_key: api_key,
    skip_waiting_for_build_processing: true, 
  )
end 